/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: BOWTIE2_BUILD_HOST {
        publishDir = [
            path: { "${params.outdir}/bowtie2/build_host" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: BOWTIE2_ALIGN_HOST {
        publishDir = [
            path: { "${params.outdir}/bowtie2/align_host" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: BOWTIE2_BUILD_ORG {
        publishDir = [
            path: { "${params.outdir}/bowtie2/build_org" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: BOWTIE2_ALIGN_ORG {
        publishDir = [
            path: { "${params.outdir}/bowtie2/align_org" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: SUBREAD_FEATURECOUNTS_BOWTIE2 {
        publishDir = [
            path: { "${params.outdir}/bowtie2/subread/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: GATHER_COUNTS_BOWTIE2 {
        publishDir = [
            path: { "${params.outdir}/bowtie2/count_table/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: STAR_GENOMEGENERATE_HOST {
        publishDir = [
            path: { "${params.outdir}/STAR/build_host" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: STAR_ALIGN_HOST {
        publishDir = [
            path: { "${params.outdir}/STAR/align_host" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = '--outReadsUnmapped Fastx --readFilesCommand zcat'
    }

    withName: STAR_GENOMEGENERATE_ORG {
        publishDir = [
            path: { "${params.outdir}/STAR/build_org" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: STAR_ALIGN_ORG {
        publishDir = [
            path: { "${params.outdir}/STAR/align_org" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = '--readFilesCommand zcat --outSAMtype BAM Unsorted SortedByCoordinate' // Sort bams to be used by featureCounts
    }

    withName: SUBREAD_FEATURECOUNTS_STAR {
        publishDir = [
            path: { "${params.outdir}/STAR/subread/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: GATHER_COUNTS_STAR {
        publishDir = [
            path: { "${params.outdir}/STAR/count_table/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: FASTQC {
        ext.args = '--quiet'
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

}
